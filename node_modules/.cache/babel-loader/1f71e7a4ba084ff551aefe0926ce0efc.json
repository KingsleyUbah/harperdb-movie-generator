{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\KINGSLEY UBAH\\\\Node\\\\top-movies-app\\\\src\\\\components\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHarperDB } from 'use-harperdb';\n\nfunction Movie() {\n  _s();\n\n  let [data, loading, error, refresh] = useHarperDB({\n    query: {\n      operation: 'sql',\n      sql: `select * from collection.movie where id = ${Math.floor(Math.random() * 6) + 1}`\n    },\n    interval: 20000\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-cover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-information\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: data[0].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ratings\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"big-half\",\n                children: data[0].rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 9\n              }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"small-half\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"supporting-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"year\",\n            children: data[0].date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 5\n          }, this), \" -\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time\",\n            children: [data[0].hours, \"h:\", data[0].minutes, \"m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: data[0].cover,\n            alt: \"Movie Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genres\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"movie-genres\",\n          children: data[0].genres.map((genre, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"movie-genre-item\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 5\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lower-information\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: data[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Starring: \", data[0].stars.map((star, index) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [star, \" -\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 5\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Writers:\", data[0].writers.map((writer, index) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"writer\",\n              children: [writer, \" - \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 5\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Directors:\", data[0].directors.map((director, index) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"director\",\n              children: [director, \" - \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 5\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: data[0].website,\n            className: \"visit-movie-button\",\n            children: \"AUTOGENERATES IN 15 SECS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: data[0].website,\n            className: \"generate-movie-button\",\n            children: \"Visit Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Sorry No Data\", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Movie, \"C9uRy8gtULEoLgpYvNyEAXAtX88=\", false, function () {\n  return [useHarperDB];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/KINGSLEY UBAH/Node/top-movies-app/src/components/Movie.js"],"names":["React","useHarperDB","Movie","data","loading","error","refresh","query","operation","sql","Math","floor","random","interval","title","rating","date","hours","minutes","cover","genres","map","genre","index","description","stars","star","writers","writer","directors","director","website"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useHarperDB } from 'use-harperdb';\r\n\r\nfunction Movie() {\r\n\r\nlet [data, loading, error, refresh] = useHarperDB({\r\n    query: {\r\n      operation: 'sql',\r\n      sql: `select * from collection.movie where id = ${Math.floor(Math.random() * 6) + 1}`\r\n    },\r\n    interval: 20000\r\n  }\r\n  )\r\n\r\n\r\n\r\n  if(loading) {\r\n    return <div> Loading... </div>\r\n  }\r\n\r\n\r\nif(data) {\r\n      return (\r\n<>\r\n<div className=\"movie-cover\">\r\n  <div className=\"top-information\">\r\n    <h2 className=\"title\">{data[0].title}</h2>\r\n    <div className=\"circle\">\r\n      <div className=\"ratings\">\r\n        <span className=\"big-half\">{data[0].rating}</span>/<span className=\"small-half\">10</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"supporting-info\">\r\n    <span className=\"year\">{data[0].date}</span> -\r\n    <span className=\"time\">{data[0].hours}h:{data[0].minutes}m</span>\r\n  </div>\r\n  <div className=\"image\">\r\n    <img src={data[0].cover} alt=\"Movie Image\" />\r\n  </div>\r\n</div>\r\n\r\n<div className=\"genres\">\r\n  <ul className=\"movie-genres\">\r\n    {data[0].genres.map((genre, index) => {\r\n    return (\r\n    <li key={index}><span className=\"movie-genre-item\">{genre}</span></li>\r\n  )\r\n    })}\r\n  </ul>\r\n</div>\r\n\r\n<div className=\"lower-information\">\r\n  <p>{data[0].description}</p>\r\n\r\n  <hr />\r\n  <p> Starring: {data[0].stars.map((star, index) => {\r\n    return (\r\n    <span key={index}>{star} -</span>\r\n    )\r\n    })}\r\n  </p>\r\n  <hr />\r\n  <p> Writers:\r\n    {data[0].writers.map((writer, index) => {\r\n      return (\r\n    <span key={index} className=\"writer\">{writer} - </span>\r\n    )\r\n    })}\r\n  </p>\r\n  <hr />\r\n  <p>Directors:\r\n    {data[0].directors.map((director, index) => {\r\n      return (\r\n    <span key={index} className=\"director\">{director} - </span>\r\n    )\r\n    })}\r\n  </p>\r\n  <hr />\r\n  <div className=\"action-buttons\">\r\n    <a href={data[0].website} className=\"visit-movie-button\">AUTOGENERATES IN 15 SECS</a>\r\n    <a href={data[0].website} className=\"generate-movie-button\">Visit Movie</a>\r\n  </div>\r\n</div>\r\n</>\r\n)\r\n} else {\r\n    return (\r\n      <div>Sorry No Data\r\n        {error}\r\n      </div>\r\n  )\r\n}\r\n\r\n}\r\n\r\nexport default Movie\r\n"]},"metadata":{},"sourceType":"module"}