{"version":3,"sources":["components/Movie.js","App.js","index.js"],"names":["Movie","useHarperDB","query","operation","sql","Math","floor","random","data","loading","error","refresh","className","title","rating","date","hours","minutes","src","cover","alt","genres","map","genre","index","description","stars","star","writers","writer","directors","director","href","website","onClick","App","ReactDOM","render","StrictMode","url","process","user","password","document","getElementById"],"mappings":"mQAgGeA,MA7Ff,WAAkB,IAAD,EACqBC,sBAAY,CAC9CC,MAAO,CACLC,UAAW,MACXC,IAAI,6CAAD,OAA+CC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,MAJvE,mBACZC,EADY,KACNC,EADM,KACGC,EADH,KACUC,EADV,KAYf,OAAGF,EACM,+CAIRD,EAEH,qCACA,sBAAKI,UAAU,cAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBJ,EAAK,GAAGK,QAC/B,qBAAKD,UAAU,SAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAMA,UAAU,WAAhB,SAA4BJ,EAAK,GAAGM,SADtC,IACqD,sBAAMF,UAAU,aAAhB,wBAKzD,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,OAAhB,SAAwBJ,EAAK,GAAGO,OADlC,KAEE,uBAAMH,UAAU,OAAhB,UAAwBJ,EAAK,GAAGQ,MAAhC,KAAyCR,EAAK,GAAGS,QAAjD,UAEF,qBAAKL,UAAU,QAAf,SACE,qBAAKM,IAAKV,EAAK,GAAGW,MAAOC,IAAI,qBAIjC,qBAAKR,UAAU,SAAf,SACE,oBAAIA,UAAU,eAAd,SACGJ,EAAK,GAAGa,OAAOC,KAAI,SAACC,EAAOC,GAC5B,OACA,6BAAgB,sBAAMZ,UAAU,mBAAhB,SAAoCW,KAA3CC,UAMb,sBAAKZ,UAAU,oBAAf,UACE,4BAAIJ,EAAK,GAAGiB,cAEZ,uBACA,4CAAejB,EAAK,GAAGkB,MAAMJ,KAAI,SAACK,EAAMH,GACtC,OACA,iCAAmBG,EAAnB,QAAWH,SAIb,uBACA,0CACGhB,EAAK,GAAGoB,QAAQN,KAAI,SAACO,EAAQL,GAC5B,OACF,uBAAkBZ,UAAU,SAA5B,UAAsCiB,EAAtC,QAAWL,SAIb,uBACA,2CACGhB,EAAK,GAAGsB,UAAUR,KAAI,SAACS,EAAUP,GAChC,OACF,uBAAkBZ,UAAU,WAA5B,UAAwCmB,EAAxC,QAAWP,SAIb,uBACA,sBAAKZ,UAAU,iBAAf,UACE,mBAAGoB,KAAMxB,EAAK,GAAGyB,QAASrB,UAAU,qBAApC,yBACA,mBAAGoB,KAAK,GAAGpB,UAAU,wBAAwBsB,QAASvB,EAAtD,yCAOE,gDACGD,MCrEMyB,MAhBf,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,mCACE,oBAAIA,UAAU,UAAd,wBACA,4FAEF,8BACE,cAAC,EAAD,YCNVwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,mBAAD,CACAC,IAAKC,gDACLC,KAAMD,iBACNE,SAAUF,cAHV,SAKE,cAAC,EAAD,QAGJG,SAASC,eAAe,W","file":"static/js/main.b538d39b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHarperDB } from 'use-harperdb';\r\n\r\nfunction Movie() {\r\nlet [data, loading, error, refresh] = useHarperDB({\r\n    query: {\r\n      operation: 'sql',\r\n      sql: `select * from collection.movie where id = ${Math.floor(Math.random() * 8) + 1}`\r\n    }\r\n    /* interval: 40000 */\r\n  }\r\n  )\r\n\r\n\r\n\r\n  if(loading) {\r\n    return <div> Loading... </div>\r\n  }\r\n\r\n\r\nif(data) {\r\n      return (\r\n<>\r\n<div className=\"movie-cover\">\r\n  <div className=\"top-information\">\r\n    <h2 className=\"title\">{data[0].title}</h2>\r\n    <div className=\"circle\">\r\n      <div className=\"ratings\">\r\n        <span className=\"big-half\">{data[0].rating}</span>/<span className=\"small-half\">10</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"supporting-info\">\r\n    <span className=\"year\">{data[0].date}</span> -\r\n    <span className=\"time\">{data[0].hours}h:{data[0].minutes}m</span>\r\n  </div>\r\n  <div className=\"image\">\r\n    <img src={data[0].cover} alt=\"Movie Image\" />\r\n  </div>\r\n</div>\r\n\r\n<div className=\"genres\">\r\n  <ul className=\"movie-genres\">\r\n    {data[0].genres.map((genre, index) => {\r\n    return (\r\n    <li key={index}><span className=\"movie-genre-item\">{genre}</span></li>\r\n  )\r\n    })}\r\n  </ul>\r\n</div>\r\n\r\n<div className=\"lower-information\">\r\n  <p>{data[0].description}</p>\r\n\r\n  <hr />\r\n  <p> Starring: {data[0].stars.map((star, index) => {\r\n    return (\r\n    <span key={index}>{star} - </span>\r\n    )\r\n    })}\r\n  </p>\r\n  <hr />\r\n  <p> Writers:\r\n    {data[0].writers.map((writer, index) => {\r\n      return (\r\n    <span key={index} className=\"writer\">{writer} - </span>\r\n    )\r\n    })}\r\n  </p>\r\n  <hr />\r\n  <p>Directors:\r\n    {data[0].directors.map((director, index) => {\r\n      return (\r\n    <span key={index} className=\"director\">{director} - </span>\r\n    )\r\n    })}\r\n  </p>\r\n  <hr />\r\n  <div className=\"action-buttons\">\r\n    <a href={data[0].website} className=\"visit-movie-button\">Visit Movie</a>\r\n    <a href=\"\" className=\"generate-movie-button\" onClick={refresh}>GENERATE NEW MOVIE</a>\r\n  </div>\r\n</div>\r\n</>\r\n)\r\n} else {\r\n    return (\r\n      <div>Sorry No Data\r\n        {error}\r\n      </div>\r\n  )\r\n}\r\n\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react';\nimport './App.css';\nimport Movie from './components/Movie';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"main-container\">\n        <header>\n          <h1 className=\"heading\">Movie List</h1>\n          <h3> A Simple Movie Generator built with React and HarperDB</h3>\n        </header>\n        <div>\n          <Movie />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HarperDBProvider } from 'use-harperdb';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HarperDBProvider\n    url={process.env.REACT_APP_DB_URL}\n    user={process.env.REACT_APP_USER}\n    password={process.env.REACT_APP_PASSWORD}\n    >\n      <App />\n    </HarperDBProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}